{"version":3,"sources":["index.js"],"names":["NativeModules","Dimensions","width","height","get","MultipleImagePicker","exportObject","defaultOptions","usedPrefetch","allowedAlbumCloudShared","muteAudio","autoPlay","haveThumbnail","thumbnailWidth","Math","round","thumbnailHeight","allowedLivePhotos","preventAutomaticLimitedAccessAlert","emptyMessage","selectMessage","deselectMessage","selectedColor","maximumMessageTitle","maximumMessage","maximumVideoMessage","messageTitleButton","cancelTitle","tapHereToChange","usedCameraButton","allowedVideo","allowedPhotograph","allowedVideoRecording","maxVideoDuration","numberOfColumn","maxSelectedAssets","doneTitle","isPreview","mediaType","isExportThumbnail","maxVideo","selectedAssets","singleSelectedMode","isCrop","isCropCircle","openPicker","optionsPicker","options","isSingle","Promise","resolve","reject","response","length","e"],"mappings":"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","sourcesContent":["import { NativeModules, Dimensions } from 'react-native';\r\nconst { width, height } = Dimensions.get('window');\r\nconst { MultipleImagePicker } = NativeModules;\r\n\r\nlet exportObject = {};\r\n\r\nlet defaultOptions = {\r\n  //**iOS**//\r\n  usedPrefetch: false,\r\n  allowedAlbumCloudShared: false,\r\n  muteAudio: true,\r\n  autoPlay: true,\r\n  //resize thumbnail\r\n  haveThumbnail: true,\r\n\r\n  thumbnailWidth: Math.round(width / 2),\r\n  thumbnailHeight: Math.round(height / 2),\r\n  allowedLivePhotos: true,\r\n  preventAutomaticLimitedAccessAlert: true, // newest iOS 14\r\n  emptyMessage: 'No albums',\r\n  selectMessage: 'Select',\r\n  deselectMessage: 'Deselect',\r\n  selectedColor: '#FB9300',\r\n  maximumMessageTitle: 'Notification',\r\n  maximumMessage: 'You have selected the maximum number of media allowed',\r\n  maximumVideoMessage: 'You have selected the maximum number of video allowed',\r\n  messageTitleButton: 'OK',\r\n  cancelTitle: 'Cancel',\r\n  tapHereToChange: 'Tap here to change',\r\n\r\n  //****//\r\n\r\n  //**Android**//\r\n\r\n  //****//\r\n\r\n  //**Both**//\r\n  usedCameraButton: true,\r\n  allowedVideo: true,\r\n  allowedPhotograph: true, // for camera : allow this option when you want to take a photos\r\n  allowedVideoRecording: false, //for camera : allow this option when you want to recording video.\r\n  maxVideoDuration: 60, //for camera : max video recording duration\r\n  numberOfColumn: 3,\r\n  maxSelectedAssets: 20,\r\n  doneTitle: 'Done',\r\n  isPreview: true,\r\n  mediaType: 'all',\r\n  isExportThumbnail: false,\r\n  maxVideo: 20,\r\n  selectedAssets: [],\r\n  singleSelectedMode: false,\r\n  isCrop: false,\r\n  isCropCircle: false,\r\n  //****//\r\n\r\n  // fetchOption: Object,\r\n  // fetchCollectionOption: Object,\r\n\r\n  // emptyImage: Image,\r\n};\r\n\r\nexportObject = {\r\n  openPicker: (optionsPicker) => {\r\n    const options = {\r\n      ...defaultOptions,\r\n      ...optionsPicker,\r\n    };\r\n    const isSingle = options?.singleSelectedMode ?? false;\r\n    if (isSingle) options.selectedAssets = [];\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const response = await MultipleImagePicker.openPicker(options);\r\n        // console.log('res', response);\r\n        if (response?.length) {\r\n          if (isSingle) {\r\n            resolve(response[0]);\r\n          }\r\n          resolve(response);\r\n          return;\r\n        }\r\n        resolve([]);\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  },\r\n};\r\n\r\nexport default exportObject;\r\n"]}